                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  3 2018) (Linux)
                                      4 ; This file was generated Thu Apr  4 23:14:22 2019
                                      5 ;--------------------------------------------------------
                                      6 	.module blink
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _delay
                                     14 	.globl _set_pin_output
                                     15 	.globl _clock_init
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; Stack segment in internal ram 
                                     26 ;--------------------------------------------------------
                                     27 	.area	SSEG
      000000                         28 __start__stack:
      000000                         29 	.ds	1
                                     30 
                                     31 ;--------------------------------------------------------
                                     32 ; absolute external ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DABS (ABS)
                                     35 ;--------------------------------------------------------
                                     36 ; interrupt vector 
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
      000000                         39 __interrupt_vect:
      000000 82v00u00u00             40 	int s_GSINIT ;reset
      000004 82 00 00 00             41 	int 0x0000 ;trap
      000008 82 00 00 00             42 	int 0x0000 ;int0
      00000C 82 00 00 00             43 	int 0x0000 ;int1
      000010 82 00 00 00             44 	int 0x0000 ;int2
      000014 82 00 00 00             45 	int 0x0000 ;int3
      000018 82 00 00 00             46 	int 0x0000 ;int4
      00001C 82 00 00 00             47 	int 0x0000 ;int5
      000020 82 00 00 00             48 	int 0x0000 ;int6
      000024 82 00 00 00             49 	int 0x0000 ;int7
      000028 82 00 00 00             50 	int 0x0000 ;int8
      00002C 82 00 00 00             51 	int 0x0000 ;int9
      000030 82 00 00 00             52 	int 0x0000 ;int10
      000034 82 00 00 00             53 	int 0x0000 ;int11
      000038 82 00 00 00             54 	int 0x0000 ;int12
      00003C 82 00 00 00             55 	int 0x0000 ;int13
      000040 82 00 00 00             56 	int 0x0000 ;int14
      000044 82 00 00 00             57 	int 0x0000 ;int15
      000048 82 00 00 00             58 	int 0x0000 ;int16
      00004C 82 00 00 00             59 	int 0x0000 ;int17
      000050 82 00 00 00             60 	int 0x0000 ;int18
      000054 82 00 00 00             61 	int 0x0000 ;int19
      000058 82 00 00 00             62 	int 0x0000 ;int20
      00005C 82 00 00 00             63 	int 0x0000 ;int21
      000060 82 00 00 00             64 	int 0x0000 ;int22
      000064 82 00 00 00             65 	int 0x0000 ;int23
      000068 82 00 00 00             66 	int 0x0000 ;int24
      00006C 82 00 00 00             67 	int 0x0000 ;int25
      000070 82 00 00 00             68 	int 0x0000 ;int26
      000074 82 00 00 00             69 	int 0x0000 ;int27
      000078 82 00 00 00             70 	int 0x0000 ;int28
      00007C 82 00 00 00             71 	int 0x0000 ;int29
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area HOME
                                     76 	.area GSINIT
                                     77 	.area GSFINAL
                                     78 	.area GSINIT
      000000                         79 __sdcc_gs_init_startup:
      000000                         80 __sdcc_init_data:
                                     81 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   82 	ldw x, #l_DATA
      000003 27 07            [ 1]   83 	jreq	00002$
      000005                         84 00001$:
      000005 72 4FuFFuFF      [ 1]   85 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   86 	decw x
      00000A 26 F9            [ 1]   87 	jrne	00001$
      00000C                         88 00002$:
      00000C AEr00r00         [ 2]   89 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]   90 	jreq	00004$
      000011                         91 00003$:
      000011 D6uFFuFF         [ 1]   92 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]   93 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]   94 	decw	x
      000018 26 F7            [ 1]   95 	jrne	00003$
      00001A                         96 00004$:
                                     97 ; stm8_genXINIT() end
                                     98 	.area GSFINAL
      000000 CCr00r80         [ 2]   99 	jp	__sdcc_program_startup
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME
                                    104 	.area HOME
      000080                        105 __sdcc_program_startup:
      000080 CCr00r19         [ 2]  106 	jp	_main
                                    107 ;	return from main will return to caller
                                    108 ;--------------------------------------------------------
                                    109 ; code
                                    110 ;--------------------------------------------------------
                                    111 	.area CODE
                                    112 ;	blink.c: 12: void delay(uint32_t delay){
                                    113 ;	-----------------------------------------
                                    114 ;	 function delay
                                    115 ;	-----------------------------------------
      000000                        116 _delay:
                                    117 ;	blink.c: 13: while (delay) delay--;
      000000 16 05            [ 2]  118 	ldw	y, (0x05, sp)
      000002 1E 03            [ 2]  119 	ldw	x, (0x03, sp)
      000004                        120 00101$:
      000004 90 5D            [ 2]  121 	tnzw	y
      000006 26 03            [ 1]  122 	jrne	00115$
      000008 5D               [ 2]  123 	tnzw	x
      000009 27 0D            [ 1]  124 	jreq	00104$
      00000B                        125 00115$:
      00000B 72 A2 00 01      [ 2]  126 	subw	y, #0x0001
      00000F 9F               [ 1]  127 	ld	a, xl
      000010 A2 00            [ 1]  128 	sbc	a, #0x00
      000012 02               [ 1]  129 	rlwa	x
      000013 A2 00            [ 1]  130 	sbc	a, #0x00
      000015 95               [ 1]  131 	ld	xh, a
      000016 20 EC            [ 2]  132 	jra	00101$
      000018                        133 00104$:
      000018 81               [ 4]  134 	ret
                                    135 ;	blink.c: 16: void main(){
                                    136 ;	-----------------------------------------
                                    137 ;	 function main
                                    138 ;	-----------------------------------------
      000019                        139 _main:
                                    140 ;	blink.c: 17: clock_init(1);
      000019 4B 01            [ 1]  141 	push	#0x01
      00001B 4B 00            [ 1]  142 	push	#0x00
      00001D CDr00r00         [ 4]  143 	call	_clock_init
      000020 5B 02            [ 2]  144 	addw	sp, #2
                                    145 ;	blink.c: 18: set_pin_output(PD,PIN0,OUTPUT_OD_SLOW);
      000022 5F               [ 1]  146 	clrw	x
      000023 89               [ 2]  147 	pushw	x
      000024 4B 01            [ 1]  148 	push	#0x01
      000026 4B 00            [ 1]  149 	push	#0x00
      000028 4B 03            [ 1]  150 	push	#0x03
      00002A 4B 00            [ 1]  151 	push	#0x00
      00002C CDr00r00         [ 4]  152 	call	_set_pin_output
      00002F 5B 06            [ 2]  153 	addw	sp, #6
                                    154 ;	blink.c: 19: while (1){
      000031                        155 00102$:
                                    156 ;	blink.c: 20: PD_ODR^=PIN0;
      000031 AE 50 0F         [ 2]  157 	ldw	x, #0x500f
      000034 F6               [ 1]  158 	ld	a, (x)
      000035 A8 01            [ 1]  159 	xor	a, #0x01
      000037 F7               [ 1]  160 	ld	(x), a
                                    161 ;	blink.c: 21: delay(512500);
      000038 4B F4            [ 1]  162 	push	#0xf4
      00003A 4B D1            [ 1]  163 	push	#0xd1
      00003C 4B 07            [ 1]  164 	push	#0x07
      00003E 4B 00            [ 1]  165 	push	#0x00
      000040 CDr00r00         [ 4]  166 	call	_delay
      000043 5B 04            [ 2]  167 	addw	sp, #4
      000045 20 EA            [ 2]  168 	jra	00102$
      000047 81               [ 4]  169 	ret
                                    170 	.area CODE
                                    171 	.area INITIALIZER
                                    172 	.area CABS (ABS)
