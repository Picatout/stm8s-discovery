                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  3 2018) (Linux)
                                      4 ; This file was generated Fri Apr  5 12:37:21 2019
                                      5 ;--------------------------------------------------------
                                      6 	.module blink
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _delay
                                     14 	.globl _set_pin_mode
                                     15 	.globl _clock_init
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; Stack segment in internal ram 
                                     26 ;--------------------------------------------------------
                                     27 	.area	SSEG
      0081E7                         28 __start__stack:
      0081E7                         29 	.ds	1
                                     30 
                                     31 ;--------------------------------------------------------
                                     32 ; absolute external ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DABS (ABS)
                                     35 ;--------------------------------------------------------
                                     36 ; interrupt vector 
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
      008000                         39 __interrupt_vect:
      008000 82 00 80 83             40 	int s_GSINIT ;reset
      008004 82 00 00 00             41 	int 0x0000 ;trap
      008008 82 00 00 00             42 	int 0x0000 ;int0
      00800C 82 00 00 00             43 	int 0x0000 ;int1
      008010 82 00 00 00             44 	int 0x0000 ;int2
      008014 82 00 00 00             45 	int 0x0000 ;int3
      008018 82 00 00 00             46 	int 0x0000 ;int4
      00801C 82 00 00 00             47 	int 0x0000 ;int5
      008020 82 00 00 00             48 	int 0x0000 ;int6
      008024 82 00 00 00             49 	int 0x0000 ;int7
      008028 82 00 00 00             50 	int 0x0000 ;int8
      00802C 82 00 00 00             51 	int 0x0000 ;int9
      008030 82 00 00 00             52 	int 0x0000 ;int10
      008034 82 00 00 00             53 	int 0x0000 ;int11
      008038 82 00 00 00             54 	int 0x0000 ;int12
      00803C 82 00 00 00             55 	int 0x0000 ;int13
      008040 82 00 00 00             56 	int 0x0000 ;int14
      008044 82 00 00 00             57 	int 0x0000 ;int15
      008048 82 00 00 00             58 	int 0x0000 ;int16
      00804C 82 00 00 00             59 	int 0x0000 ;int17
      008050 82 00 00 00             60 	int 0x0000 ;int18
      008054 82 00 00 00             61 	int 0x0000 ;int19
      008058 82 00 00 00             62 	int 0x0000 ;int20
      00805C 82 00 00 00             63 	int 0x0000 ;int21
      008060 82 00 00 00             64 	int 0x0000 ;int22
      008064 82 00 00 00             65 	int 0x0000 ;int23
      008068 82 00 00 00             66 	int 0x0000 ;int24
      00806C 82 00 00 00             67 	int 0x0000 ;int25
      008070 82 00 00 00             68 	int 0x0000 ;int26
      008074 82 00 00 00             69 	int 0x0000 ;int27
      008078 82 00 00 00             70 	int 0x0000 ;int28
      00807C 82 00 00 00             71 	int 0x0000 ;int29
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area HOME
                                     76 	.area GSINIT
                                     77 	.area GSFINAL
                                     78 	.area GSINIT
      008083                         79 __sdcc_gs_init_startup:
      008083                         80 __sdcc_init_data:
                                     81 ; stm8_genXINIT() start
      008083 AE 00 00         [ 2]   82 	ldw x, #l_DATA
      008086 27 07            [ 1]   83 	jreq	00002$
      008088                         84 00001$:
      008088 72 4F 00 00      [ 1]   85 	clr (s_DATA - 1, x)
      00808C 5A               [ 2]   86 	decw x
      00808D 26 F9            [ 1]   87 	jrne	00001$
      00808F                         88 00002$:
      00808F AE 00 00         [ 2]   89 	ldw	x, #l_INITIALIZER
      008092 27 09            [ 1]   90 	jreq	00004$
      008094                         91 00003$:
      008094 D6 81 E6         [ 1]   92 	ld	a, (s_INITIALIZER - 1, x)
      008097 D7 00 00         [ 1]   93 	ld	(s_INITIALIZED - 1, x), a
      00809A 5A               [ 2]   94 	decw	x
      00809B 26 F7            [ 1]   95 	jrne	00003$
      00809D                         96 00004$:
                                     97 ; stm8_genXINIT() end
                                     98 	.area GSFINAL
      00809D CC 80 80         [ 2]   99 	jp	__sdcc_program_startup
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME
                                    104 	.area HOME
      008080                        105 __sdcc_program_startup:
      008080 CC 81 95         [ 2]  106 	jp	_main
                                    107 ;	return from main will return to caller
                                    108 ;--------------------------------------------------------
                                    109 ; code
                                    110 ;--------------------------------------------------------
                                    111 	.area CODE
                                    112 ;	blink.c: 11: void delay(uint32_t delay){
                                    113 ;	-----------------------------------------
                                    114 ;	 function delay
                                    115 ;	-----------------------------------------
      00817C                        116 _delay:
                                    117 ;	blink.c: 12: while (delay) delay--;
      00817C 16 05            [ 2]  118 	ldw	y, (0x05, sp)
      00817E 1E 03            [ 2]  119 	ldw	x, (0x03, sp)
      008180                        120 00101$:
      008180 90 5D            [ 2]  121 	tnzw	y
      008182 26 03            [ 1]  122 	jrne	00115$
      008184 5D               [ 2]  123 	tnzw	x
      008185 27 0D            [ 1]  124 	jreq	00104$
      008187                        125 00115$:
      008187 72 A2 00 01      [ 2]  126 	subw	y, #0x0001
      00818B 9F               [ 1]  127 	ld	a, xl
      00818C A2 00            [ 1]  128 	sbc	a, #0x00
      00818E 02               [ 1]  129 	rlwa	x
      00818F A2 00            [ 1]  130 	sbc	a, #0x00
      008191 95               [ 1]  131 	ld	xh, a
      008192 20 EC            [ 2]  132 	jra	00101$
      008194                        133 00104$:
      008194 81               [ 4]  134 	ret
                                    135 ;	blink.c: 15: void main(){
                                    136 ;	-----------------------------------------
                                    137 ;	 function main
                                    138 ;	-----------------------------------------
      008195                        139 _main:
                                    140 ;	blink.c: 16: clock_init(1);
      008195 4B 01            [ 1]  141 	push	#0x01
      008197 4B 00            [ 1]  142 	push	#0x00
      008199 CD 80 A0         [ 4]  143 	call	_clock_init
      00819C 5B 02            [ 2]  144 	addw	sp, #2
                                    145 ;	blink.c: 17: set_pin_mode(PD,PIN0,OUTPUT_OD_SLOW);
      00819E 4B 04            [ 1]  146 	push	#0x04
      0081A0 4B 00            [ 1]  147 	push	#0x00
      0081A2 4B 01            [ 1]  148 	push	#0x01
      0081A4 4B 00            [ 1]  149 	push	#0x00
      0081A6 4B 03            [ 1]  150 	push	#0x03
      0081A8 4B 00            [ 1]  151 	push	#0x00
      0081AA CD 80 B8         [ 4]  152 	call	_set_pin_mode
      0081AD 5B 06            [ 2]  153 	addw	sp, #6
                                    154 ;	blink.c: 18: while (1){
      0081AF                        155 00102$:
                                    156 ;	blink.c: 19: PD_ODR^=PIN0;
      0081AF AE 50 0F         [ 2]  157 	ldw	x, #0x500f
      0081B2 F6               [ 1]  158 	ld	a, (x)
      0081B3 A8 01            [ 1]  159 	xor	a, #0x01
      0081B5 F7               [ 1]  160 	ld	(x), a
                                    161 ;	blink.c: 20: delay(225000);
      0081B6 4B E8            [ 1]  162 	push	#0xe8
      0081B8 4B 6E            [ 1]  163 	push	#0x6e
      0081BA 4B 03            [ 1]  164 	push	#0x03
      0081BC 4B 00            [ 1]  165 	push	#0x00
      0081BE CD 81 7C         [ 4]  166 	call	_delay
      0081C1 5B 04            [ 2]  167 	addw	sp, #4
      0081C3 20 EA            [ 2]  168 	jra	00102$
      0081C5 81               [ 4]  169 	ret
                                    170 	.area CODE
                                    171 	.area INITIALIZER
                                    172 	.area CABS (ABS)
